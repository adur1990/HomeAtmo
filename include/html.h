static const char *INDEX_HTML =
"<!DOCTYPE html>\n"
"<html>\n"
    "<head>\n"
        "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n"
        "<meta charset=\"utf-8\"/>\n"
        "<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n"

// CSS
        "<style>\n"
            "body {\n"
                "min-width: 310px;\n"
                "max-width: 800px;\n"
                "height: 400px;\n"
                "margin: 0 auto;\n"
            "}"
            "h2 {"
                "font-family: Arial;\n"
                "font-size: 2.5rem;\n"
                "text-align: center;\n"
            "}"
        "</style>\n"
    "</head>\n"

// BODY
   "<body>\n"
    "<h2>HomeAtmo</h2>\n"
        "<div id=\"chart-temperature\" class=\"container\"></div>\n"
        "<div id=\"chart-humidity\" class=\"container\"></div>\n"
        "<div id=\"chart-pressure\" class=\"container\"></div>\n"
        "<div id=\"chart-iaq\" class=\"container\"></div>\n"
        "<div id=\"chart-co2\" class=\"container\"></div>\n"
    "</body>\n"

// SCRIPT
    "<script>\n"
// Temperature
        "var chartT = new Highcharts.Chart({"
            "chart:{renderTo: 'chart-temperature'},"
            "title: {text: 'Temperatur'},"
            "series: [{"
                "showInLegend: false,"
                "data: []"
            "}],"
            "plotOptions: {"
                "line: {animation: false,"
                    "dataLabels: {enabled: true}"
                "},"
                "series: {color: '#059e8a'}"
            "},"
            "xAxis: {type: 'datetime',"
                "dateTimeLabelFormats: {second: '%H:%M:%S'}"
            "},"
            "yAxis: {"
                "title: {text: '°C'},"
                "max: 40,"
                "min: 15"
            "},"
            "credits: {enabled: false}"
        "});"
        "setInterval(function() {"
            "var xhttp = new XMLHttpRequest();"
            "xhttp.onreadystatechange = function() {"
                "if (this.readyState == 4 && this.status == 200) {"
                    "var x = (new Date()).getTime(),"
                    "y = parseFloat(this.responseText);"
                    "if(chartT.series[0].data.length > 40) {"
                        "chartT.series[0].addPoint([x, y], true, true, true);"
                    "} else {"
                        "chartT.series[0].addPoint([x, y], true, false, true);"
                    "}"
                "}"
            "};"
            "xhttp.open(\"GET\", \"/temperature\", true);"
            "xhttp.send();"
        "}, 2000);"
// Humidity
        "var chartH = new Highcharts.Chart({"
            "chart: {renderTo:'chart-humidity'},"
            "title: {text: 'Luftfeuchtigkeit'},"
            "series: [{"
                "showInLegend: false,"
                "data: []"
            "}],"
            "plotOptions: {"
                "line: {animation: false,"
                    "dataLabels: {enabled: true}"
                "}"
            "},"
            "xAxis: {"
                "type: 'datetime',"
                "dateTimeLabelFormats: {second: '%H:%M:%S'}"
            "},"
            "yAxis: {"
                "title: {text: '%'},"
                "max: 100,"
                "min: 0"
            "},"
            "credits: {enabled: false}"
        "});"
        "setInterval(function() {"
            "var xhttp = new XMLHttpRequest();"
            "xhttp.onreadystatechange = function() {"
                "if (this.readyState == 4 && this.status == 200) {"
                    "var x = (new Date()).getTime(),"
                    "y = parseFloat(this.responseText);"
                    "if(chartH.series[0].data.length > 40) {"
                        "chartH.series[0].addPoint([x, y], true, true, true);"
                    "} else {"
                        "chartH.series[0].addPoint([x, y], true, false, true);"
                    "}"
                "}"
            "};"
            "xhttp.open(\"GET\", \"/humidity\", true);"
            "xhttp.send();"
        "}, 2000);"
// Pressure
        "var chartP = new Highcharts.Chart({"
            "chart:{renderTo:'chart-pressure'},"
            "title: {text: 'Luftdruck'},"
            "series: [{"
                "showInLegend: false,"
                "data: []"
            "}],"
            "plotOptions: {"
                "line: {animation: false,"
                    "dataLabels: {enabled: true}"
                "},"
                "series: {color: '#18009c'}"
            "},"
            "xAxis: {"
                "type: 'datetime',"
                "dateTimeLabelFormats: {second: '%H:%M:%S'}"
            "},"
            "yAxis: {"
                "title: {text: 'hPa'},"
                "max: 1200,"
                "min: 900"
            "},"
            "credits: {enabled: false}"
        "});"
        "setInterval(function() {"
            "var xhttp = new XMLHttpRequest();"
            "xhttp.onreadystatechange = function() {"
                "if (this.readyState == 4 && this.status == 200) {"
                    "var x = (new Date()).getTime(),"
                    "y = parseFloat(this.responseText);"
                    "if(chartP.series[0].data.length > 40) {"
                        "chartP.series[0].addPoint([x, y], true, true, true);"
                    "} else {"
                        "chartP.series[0].addPoint([x, y], true, false, true);"
                    "}"
                "}"
            "};"
            "xhttp.open(\"GET\", \"/pressure\", true);"
            "xhttp.send();"
        "}, 2000);"
// IAQ
        "var chartA = new Highcharts.Chart({"
            "chart:{renderTo:'chart-iaq'},"
            "title: {text: 'Luftqualität'},"
            "series: [{"
                "showInLegend: false,"
                "data: []"
            "}],"
            "plotOptions: {"
                "line: {animation: false,"
                    "dataLabels: {enabled: true}"
                "},"
                "series: {color: '#18009c'}"
            "},"
            "xAxis: {"
                "type: 'datetime',"
                "dateTimeLabelFormats: {second: '%H:%M:%S'}"
            "},"
            "yAxis: {"
                "title: {text: 'IAQ'},"
                "max: 300,"
                "min: 0"
            "},"
            "credits: {enabled: false}"
        "});"
        "setInterval(function() {"
            "var xhttp = new XMLHttpRequest();"
            "xhttp.onreadystatechange = function() {"
                "if (this.readyState == 4 && this.status == 200) {"
                    "var x = (new Date()).getTime(),"
                    "y = parseFloat(this.responseText);"
                    "if(chartA.series[0].data.length > 40) {"
                        "chartA.series[0].addPoint([x, y], true, true, true);"
                    "} else {"
                        "chartA.series[0].addPoint([x, y], true, false, true);"
                    "}"
                "}"
            "};"
            "xhttp.open(\"GET\", \"/iaq\", true);"
            "xhttp.send();"
        "}, 2000);"
// CO2
        "var chartC = new Highcharts.Chart({"
            "chart:{renderTo:'chart-co2'},"
            "title: {text: 'CO2'},"
            "series: [{"
                "showInLegend: false,"
                "data: []"
            "}],"
            "plotOptions: {"
                "line: {animation: false,"
                    "dataLabels: {enabled: true}"
                "},"
                "series: {color: '#18009c'}"
            "},"
            "xAxis: {"
                "type: 'datetime',"
                "dateTimeLabelFormats: {second: '%H:%M:%S'}"
            "},"
            "yAxis: {"
                "title: {text: 'ppm'},"
                "max: 1200,"
                "min: 400"
            "},"
            "credits: {enabled: false}"
        "});"
        "setInterval(function() {"
            "var xhttp = new XMLHttpRequest();"
            "xhttp.onreadystatechange = function() {"
                "if (this.readyState == 4 && this.status == 200) {"
                    "var x = (new Date()).getTime(),"
                    "y = parseFloat(this.responseText);"
                    "if(chartC.series[0].data.length > 40) {"
                        "chartC.series[0].addPoint([x, y], true, true, true);"
                    "} else {"
                        "chartC.series[0].addPoint([x, y], true, false, true);"
                    "}"
                "}"
            "};"
            "xhttp.open(\"GET\", \"/co2\", true);"
            "xhttp.send();"
        "}, 2000);"
    "</script>\n"
"</html>\n";
